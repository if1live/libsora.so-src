CMAKE_MINIMUM_REQUIRED( VERSION 2.8 )
PROJECT( "vincent_font" )

SET( EXT_DIR ${CMAKE_CURRENT_SOURCE_DIR}/../ext )
SET( SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR} )

LIST( APPEND CMAKE_MODULE_PATH "${EXT_DIR}/cmake" )
INCLUDE( compiler_option )

MACRO( APPEND_LINK_LIBS )
	LIST( APPEND LINK_LIBS ${ARGN} )
ENDMACRO( APPEND_LINK_LIBS )

########################################################

# Add glfw
SET( GLFW_BUILD_EXAMPLES OFF )
SET( GLFW_BUILD_TESTS OFF  )
IF( APPLE )
	SET(_GLFW_COCOA ON)
	SET(_GLFW_NSGL ON)
ENDIF(  )
SET(GLFW_EXT_SRC_DIR ${EXT_DIR}/glfw CACHE PATH "glfw")
ADD_SUBDIRECTORY ( ${GLFW_EXT_SRC_DIR} "glfw" )
INCLUDE_DIRECTORIES( ${GLFW_EXT_SRC_DIR}/include )
APPEND_LINK_LIBS( glfw )

# Add GLM
INCLUDE_DIRECTORIES( ${EXT_DIR}/glm )
INCLUDE_DIRECTORIES( ${EXT_DIR}/glm/glm )

#########################################################

IF( APPLE )
	FIND_LIBRARY( OPENGL_LIB OpenGL )
	FIND_LIBRARY( COCOA_LIB Cocoa )
	FIND_LIBRARY( IOKIT_LIB IOKit )
	APPEND_LINK_LIBS( ${IOKIT_LIB} ${COCOA_LIB} )
ELSEIF( WIN32 )
	# pass
ELSE(  )
	FIND_LIBRARY( X11_LIB X11 )
	FIND_LIBRARY( XF86_LIB Xxf86vm )
	FIND_LIBRARY( PTHREAD_LIB pthread )
	FIND_LIBRARY( XRR_LIB Xrandr )
	FIND_LIBRARY( XI_LIB Xi)
	APPEND_LINK_LIBS( ${X11_LIB} 
			${XF86_LIB}
			${PTHREAD_LIB}
			${XRR_LIB}
			${XI_LIB} )
ENDIF(  )

IF( WIN32 )
	SET( GL_LIBRARY opengl32 glu32 )
ELSEIF( APPLE )
	FIND_LIBRARY( GL_LIBRARY OpenGL )
ELSE(  )
	FIND_LIBRARY( GL_LIBRARY GL)
ENDIF(  )
APPEND_LINK_LIBS( ${GL_LIBRARY} )

#########################################################

FILE( GLOB SRC_FILES "${SRC_DIR}/*.cpp" "${SRC_DIR}/*.h" )

ADD_EXECUTABLE( vincent_font ${SRC_FILES} )
TARGET_LINK_LIBRARIES( vincent_font ${LINK_LIBS} )
USE_CPP11( TARGET vincent_font )